package com.divashchenko;

public class Main {

    public static void main(String[] args) {
        System.out.println("Task 1");
        /*
        1)Вывести матрицу заполненную случайными числами (Размеры задать константами, как переменные класса).
        Вывести матрицу на экран.
        Попросить пользователя ввести число и умножить каждый элемент матрицы на число, и вывести результат.
         */
        Task1.task1();
        System.out.println();

        System.out.println("Task 2");
        /*
        2) Вывести сумму элементов матрицы случайных чисел
         */
        Task2.task2();
        System.out.println();

        System.out.println("Task 3");
        /*
        3) Задана матрица случайных чисел. Пользователь вводит число. Вывести сколько раз это число встречается в матрице
         */
        Task3.task3();
        System.out.println();

        System.out.println("Task 4");
        /*
        4) Найти строку матрицы с максимальной суммой элементов
         */
        Task4.task4();
        System.out.println();

        System.out.println("Task 5");
        /*
        5*) создать на основе данной матрицы перевернутую матрицу. например:
        1, 2, 3
        4, 5, 6

        Стало:
        4, 1
        5, 2
        6, 3
         */
        Task5.task5();
        System.out.println();

        System.out.println("Task 6");
        /*
        6) Монета подбрасывается 3 раза. Написать программу которая выводит вероятность того что 3 раза выпала одна и та же сторона.
         */
        Task6.task6();
        System.out.println();

        System.out.println("Task 7");
        /*
        7) Подбрасывается 3 кубика. Написать программу которая выводит вероятность того на кубиках числа идут подряд(если их отсортировать). Пример:
        Подряд: (1,2,3) (3,4,5) (4,3,5) (3,1,2) (6,5,4)
        Не подряд: (1,1,2) (1, 2, 5)
         */
        Task7.task7();
        System.out.println();

        System.out.println("Task 8");
        /*
        8*) Задан одномерный массив случайных чисел из 100 элементов. Попросить пользователя ввести число N и разбить этот массив на N строк.
        Недостающие элементы заполнить нулями. Например, если пользователь ввел число 3 то разбить матрицу на 3 строки по 34 элемента.
         */
        Task8.task8();
        System.out.println();
    }
}
